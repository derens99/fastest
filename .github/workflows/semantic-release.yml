name: Release

on:
  push:
    branches: [main]
  workflow_dispatch:

permissions:
  contents: write
  pull-requests: write
  id-token: write

jobs:
# ── Semantic Release (analyze commits, bump version, create tag) ──
  semantic-release:
    runs-on: ubuntu-latest
    outputs:
      new_release_published: ${{ steps.semantic.outputs.new_release_published }}
      new_release_version: ${{ steps.semantic.outputs.new_release_version }}
      new_release_git_tag: ${{ steps.semantic.outputs.new_release_git_tag }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - uses: actions/setup-node@v4
        with:
          node-version: 'lts/*'
      
      - uses: dtolnay/rust-toolchain@stable
      
      - name: Install cargo-edit
        run: cargo install cargo-edit
      
      - name: Semantic Release
        uses: cycjimmy/semantic-release-action@v4
        id: semantic
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          semantic_version: 19
          extra_plugins: |
            @semantic-release/changelog
            @semantic-release/exec
            @semantic-release/git

# ── Build and upload binaries when a new release is created ──
  upload-binaries:
    needs: semantic-release
    if: needs.semantic-release.outputs.new_release_published == 'true'
    strategy:
      matrix:
        include:
          - target: x86_64-unknown-linux-gnu
            os: ubuntu-latest
          - target: x86_64-apple-darwin
            os: macos-latest
          - target: aarch64-apple-darwin
            os: macos-latest
          - target: universal-apple-darwin
            os: macos-latest
          - target: x86_64-pc-windows-msvc
            os: windows-latest
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ needs.semantic-release.outputs.new_release_git_tag }}
      
      - uses: taiki-e/upload-rust-binary-action@v1
        with:
          bin: fastest
          target: ${{ matrix.target }}
          archive: fastest-$tag-$target
          include: LICENSE,README.md
          checksum: sha256
          profile: release
          manifest-path: ./Cargo.toml
          token: ${{ secrets.GITHUB_TOKEN }}
          # Specify the ref to ensure we're uploading to the right release
          ref: refs/tags/${{ needs.semantic-release.outputs.new_release_git_tag }}