name: Release

on:
  push:
    tags:
      - 'v[0-9]+.*'
  workflow_dispatch:        # manual trigger

permissions:
  contents: write           # tags, CHANGELOG, releases
  pull-requests: write
  id-token: write           # crates.io publish

jobs:
# ── create GitHub Release ────────────────────────────────────
  create-release:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: taiki-e/create-gh-release-action@v1
        with:
          # Path to changelog
          changelog: CHANGELOG.md
          # GitHub token for creating GitHub Releases
          token: ${{ secrets.GITHUB_TOKEN }}

# ── publish to crates.io once tag is pushed ─────────────────
# Temporarily disabled
#  publish:
#    needs: create-release
#    runs-on: ubuntu-latest
#    steps:
#      - uses: actions/checkout@v4
#        with: {fetch-depth: 0}     # pull tags
#      - uses: dtolnay/rust-toolchain@stable
#      - name: Publish to crates.io
#        env:
#          CARGO_REGISTRY_TOKEN: ${{ secrets.CARGO_REGISTRY_TOKEN }}
#        run: |
#          cargo publish -p fastest-core
#          cargo publish -p fastest-execution
#          cargo publish -p fastest-plugins-macros
#          cargo publish -p fastest-plugins
#          cargo publish -p fastest-advanced
#          cargo publish -p fastest-cli

# ── build and upload binaries to GitHub Releases ────────────
  upload-binaries:
    needs: create-release
    strategy:
      matrix:
        include:
          - target: x86_64-unknown-linux-gnu
            os: ubuntu-latest
          - target: x86_64-apple-darwin
            os: macos-latest
          - target: aarch64-apple-darwin
            os: macos-latest
          - target: universal-apple-darwin
            os: macos-latest
          - target: x86_64-pc-windows-msvc
            os: windows-latest
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
      
      - uses: taiki-e/upload-rust-binary-action@v1
        with:
          # Binary name
          bin: fastest
          # Target triple
          target: ${{ matrix.target }}
          # Archive name template
          archive: fastest-$tag-$target
          # Include additional files
          include: LICENSE,README.md
          # Create checksums
          checksum: sha256
          # Build with release profile
          profile: release
          # Path to workspace Cargo.toml
          manifest-path: ./Cargo.toml
          # GitHub token
          token: ${{ secrets.GITHUB_TOKEN }}