name: Release

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write

jobs:
  create-release:
    name: Create Release
    runs-on: ubuntu-latest
    outputs:
      upload_url: ${{ steps.release.outputs.upload_url }}
    steps:
      - name: Create Release
        id: release
        uses: softprops/action-gh-release@v1
        with:
          draft: false
          prerelease: false
          generate_release_notes: true
          
  build-release:
    name: Build Release
    needs: create-release
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            artifact: fastest-linux-x64
          - os: macos-latest
            target: x86_64-apple-darwin
            artifact: fastest-macos-x64
          - os: macos-latest
            target: aarch64-apple-darwin
            artifact: fastest-macos-arm64
          - os: windows-latest
            target: x86_64-pc-windows-msvc
            artifact: fastest-windows-x64.exe
            
    steps:
      - uses: actions/checkout@v4
      
      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target }}
          
      - name: Build
        run: cargo build --release --target ${{ matrix.target }}
        
      - name: Package
        shell: bash
        run: |
          if [[ "${{ matrix.os }}" == "windows-latest" ]]; then
            cp target/${{ matrix.target }}/release/fastest.exe ${{ matrix.artifact }}
          else
            cp target/${{ matrix.target }}/release/fastest ${{ matrix.artifact }}
          fi
          
      - name: Upload Release Asset
        uses: softprops/action-gh-release@v1
        with:
          files: ${{ matrix.artifact }}
          
  publish-crate:
    name: Publish to crates.io
    runs-on: ubuntu-latest
    needs: build-release
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
      
      - name: Publish fastest-core
        run: cargo publish -p fastest-core --token ${{ secrets.CRATES_TOKEN }}
        
      - name: Wait for crates.io
        run: sleep 30
        
      - name: Publish fastest-cli
        run: cargo publish -p fastest-cli --token ${{ secrets.CRATES_TOKEN }}