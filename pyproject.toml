[build-system]
requires = ["setuptools>=45", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "fastest-runner"
version = "1.0.4"
description = "âš¡ The blazing fast Python test runner with intelligent performance optimization"
readme = "README.md"
authors = [
    {name = "Fastest Team", email = "hello@fastest.dev"}
]
license = {text = "MIT"}
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Rust",
    "Topic :: Software Development :: Testing",
    "Topic :: Software Development :: Testing :: Unit",
    "Topic :: Software Development :: Quality Assurance",
    "Environment :: Console",
    "Operating System :: POSIX",
    "Operating System :: MacOS :: MacOS X",
    "Operating System :: Microsoft :: Windows",
]
requires-python = ">=3.8"
keywords = [
    "testing", 
    "test-runner", 
    "pytest", 
    "performance", 
    "rust", 
    "parallel", 
    "fast", 
    "python",
    "benchmark",
    "optimization"
]
dependencies = [
    "requests>=2.32.3",
    "msgpack>=1.0.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=6.0.0",
    "pytest-benchmark>=3.4.0",
    "black>=22.0.0",
    "ruff>=0.1.0",
    "mypy>=1.0.0",
]

[project.urls]
Homepage = "https://github.com/derens99/fastest"
Documentation = "https://github.com/derens99/fastest/tree/main/docs"
Repository = "https://github.com/derens99/fastest"
Issues = "https://github.com/derens99/fastest/issues"
Changelog = "https://github.com/derens99/fastest/blob/main/CHANGELOG.md"
Roadmap = "https://github.com/derens99/fastest/blob/main/ROADMAP.md"
Benchmarks = "https://github.com/derens99/fastest/tree/main/benchmarks"

[project.scripts]
fastest = "fastest_runner:main"

[tool.cibuildwheel]
# Build for common platforms
build = ["cp38-*", "cp39-*", "cp310-*", "cp311-*", "cp312-*"]
skip = ["*-musllinux_*", "*-win32", "pp*"]

# Use rustup to install Rust
before-all = "curl https://sh.rustup.rs -sSf | sh -s -- -y"
environment = { PATH = "$HOME/.cargo/bin:$PATH" }

[tool.cibuildwheel.linux]
before-all = [
    "curl https://sh.rustup.rs -sSf | sh -s -- -y",
    "yum install -y openssl-devel || apt-get update && apt-get install -y libssl-dev"
]

[tool.cibuildwheel.macos]
before-all = [
    "curl https://sh.rustup.rs -sSf | sh -s -- -y",
    "rustup target add aarch64-apple-darwin"
]

[tool.cibuildwheel.windows]
before-all = [
    "rustup-init.exe -y",
    "rustup target add i686-pc-windows-msvc"
] 
